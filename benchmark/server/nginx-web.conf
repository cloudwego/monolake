#user  nobody;
worker_processes  4;
worker_rlimit_nofile 100000;

error_log /var/log/nginx/error.log crit;

#pid        logs/nginx.pid;

events {
    # determines how much clients will be served per worker
    # max clients = worker_connections * worker_processes
    # max clients is also limited by the number of socket connections available on the system (~64k)
    worker_connections 4000;

    # optimized to serve many clients with each thread, essential for linux -- for testing environment
    use epoll;

    # accept as many connections as possible, may flood worker connections if set too low -- for testing environment
    multi_accept on;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # cache informations about FDs, frequently accessed files
    # can boost performance, but you need to test those values
    #open_file_cache max=200000 inactive=20s;
    #open_file_cache_valid 30s;
    #open_file_cache_min_uses 2;
    #open_file_cache_errors on;

    # to boost I/O on HDD we can disable access logs
    access_log off;

    # copies data between one FD and other from within the kernel
    # faster than read() + write()
    sendfile on;

    # send headers in one piece, it is better than sending them one by one
    tcp_nopush on;

    # don't buffer data sent, good for small data bursts in real time
    # https://brooker.co.za/blog/2024/05/09/nagle.html
    # https://news.ycombinator.com/item?id=10608356
    #tcp_nodelay on;

    # allow the server to close connection on non responding client, this will free up memory
    #reset_timedout_connection on;

    # request timed out -- default 60
    #client_body_timeout 10;

    # if client stop responding, free up memory -- default 60
    #send_timeout 2;

    # server will close connection after this time -- default 75
    keepalive_timeout 75;

    # number of requests client can make over keep-alive -- for testing environment
    keepalive_requests 1000000000;

    #gzip  on;

    server {
        listen       10082;
        server_name  localhost;

        #charset koi8-r;

        access_log  off;
	    open_file_cache max=1000;

        location / {
            root   /usr/share/nginx/html/server2;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

    server {
        listen       10083;
        server_name  localhost;

        #charset koi8-r;

        access_log  off;
	    open_file_cache max=1000;

        location / {
            root   /usr/share/nginx/html/server3;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

    server {
        listen       10084;
        server_name  localhost;

        #charset koi8-r;

        access_log  off;
	    open_file_cache max=1000;

        location / {
            root   /usr/share/nginx/html/server4;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

    server {
        listen       10085;
        server_name  localhost;

        #charset koi8-r;

        access_log  off;
	    open_file_cache max=1000;

        location / {
            root   /usr/share/nginx/html/server5;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }


    # HTTPS server
    #
    # server {
    #     listen       8443 ssl;
    #     server_name  localhost;

    #     ssl_certificate      cert.pem;
    #     ssl_certificate_key  cert.key;

    #     ssl_session_cache    shared:SSL:1m;
    #     ssl_session_timeout  5m;

    #     ssl_ciphers  HIGH:!aNULL:!MD5;
    #     ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }

    # }
    include servers/*;
}
